# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import foobar_pb2 as foobar__pb2


class FoobarHandlerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetFoobar = channel.unary_unary(
                '/foobar_grpc.FoobarHandler/GetFoobar',
                request_serializer=foobar__pb2.SingleRequest.SerializeToString,
                response_deserializer=foobar__pb2.Foobar.FromString,
                )
        self.GetListFoobar = channel.unary_unary(
                '/foobar_grpc.FoobarHandler/GetListFoobar',
                request_serializer=foobar__pb2.FetchRequest.SerializeToString,
                response_deserializer=foobar__pb2.ListFoobar.FromString,
                )
        self.UpdateFoobar = channel.unary_unary(
                '/foobar_grpc.FoobarHandler/UpdateFoobar',
                request_serializer=foobar__pb2.Foobar.SerializeToString,
                response_deserializer=foobar__pb2.Foobar.FromString,
                )
        self.Delete = channel.unary_unary(
                '/foobar_grpc.FoobarHandler/Delete',
                request_serializer=foobar__pb2.SingleRequest.SerializeToString,
                response_deserializer=foobar__pb2.DeleteResponse.FromString,
                )
        self.Store = channel.unary_unary(
                '/foobar_grpc.FoobarHandler/Store',
                request_serializer=foobar__pb2.Foobar.SerializeToString,
                response_deserializer=foobar__pb2.Foobar.FromString,
                )


class FoobarHandlerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetFoobar(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetListFoobar(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFoobar(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Store(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FoobarHandlerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetFoobar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFoobar,
                    request_deserializer=foobar__pb2.SingleRequest.FromString,
                    response_serializer=foobar__pb2.Foobar.SerializeToString,
            ),
            'GetListFoobar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetListFoobar,
                    request_deserializer=foobar__pb2.FetchRequest.FromString,
                    response_serializer=foobar__pb2.ListFoobar.SerializeToString,
            ),
            'UpdateFoobar': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFoobar,
                    request_deserializer=foobar__pb2.Foobar.FromString,
                    response_serializer=foobar__pb2.Foobar.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=foobar__pb2.SingleRequest.FromString,
                    response_serializer=foobar__pb2.DeleteResponse.SerializeToString,
            ),
            'Store': grpc.unary_unary_rpc_method_handler(
                    servicer.Store,
                    request_deserializer=foobar__pb2.Foobar.FromString,
                    response_serializer=foobar__pb2.Foobar.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'foobar_grpc.FoobarHandler', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FoobarHandler(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetFoobar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foobar_grpc.FoobarHandler/GetFoobar',
            foobar__pb2.SingleRequest.SerializeToString,
            foobar__pb2.Foobar.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetListFoobar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foobar_grpc.FoobarHandler/GetListFoobar',
            foobar__pb2.FetchRequest.SerializeToString,
            foobar__pb2.ListFoobar.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFoobar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foobar_grpc.FoobarHandler/UpdateFoobar',
            foobar__pb2.Foobar.SerializeToString,
            foobar__pb2.Foobar.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foobar_grpc.FoobarHandler/Delete',
            foobar__pb2.SingleRequest.SerializeToString,
            foobar__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Store(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/foobar_grpc.FoobarHandler/Store',
            foobar__pb2.Foobar.SerializeToString,
            foobar__pb2.Foobar.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
